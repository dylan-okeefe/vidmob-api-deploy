{"version":3,"sources":["assets/ct-radio-selected.svg","assets/ct-radio-deactivated.svg","assets/vm-logo-primary.svg","assets/ic-clear.svg","assets/ic-large-email-generic.svg","containers/header.js","containers/invited-alert.js","containers/personal-alert.js","containers/email-form.js","containers/get-started.js","containers/domain-input.js","containers/company-sign-up.js","containers/join-team.js","containers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Component","InvitedAlert","onClick","this","props","onInvitedAlertClose","clear","emailGeneric","PersonalAlert","type","value","onPersonalEmailBack","onPersonalEmailConfirm","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","personalEmail","continuePersonal","onEmailEntered","state","onEmailChange","e","email","target","alreadySignedUp","alreadyInvited","onButtonPress","preventDefault","fetch","then","response","status","Promise","reject","findTeamResponse","json","responseJson","result","isInWhitelist","inviteEmails","push","method","headers","Content-Type","body","JSON","stringify","message","console","log","submitted","canNotContinue","renderEmailTakenAlert","onSubmit","placeholder","onChange","renderInvited","renderPersonal","invited_alert_InvitedAlert","href","personal_alert_PersonalAlert","GetStarted","onFirstNameChange","firstName","onLastNameChange","lastName","onDisplayNameChange","displayName","onPasswordChange","password","onCompanyNameChange","companyName","existingCompany","newUser","businessName","accessToken","access_token","id","onGetStartedSubmit","renderCompanyExistsAlert","disabled","DomainInput","inputKeyDown","val","key","domains","find","domain","toLowerCase","newStateDomains","concat","toConsumableArray","domainInput","onDomainArrChange","removeDomain","length","i","newDomains","splice","_this2","map","conditionalItemClass","xmlns","width","height","viewBox","d","onKeyDown","ref","c","emailIsSelected","CompanySignup","onSelectDomains","anyFromDomains","inviteOnly","onSelectInviteOnly","onCompanySignupSubmit","radioSelected","radioDeactivated","fromAnyDomains","domain_input_DomainInput","JoinTeam","Root","isExistingCompany","childState","emailEntered","alreadySignedup","nonExistingSignup","companySignup","findMyTeamEnabled","domainWhitelist","Authorization","header_Header","Route","exact","path","render","email_form_Form","assign","get_started_GetStarted","company_sign_up_CompanySignup","component","renderGetStarted","location","pathname","renderTerms","renderCompanySignup","Redirect","to","routing","HashRouter","Index","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.28b9d6b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ct-radio-selected.172cb532.svg\";","module.exports = __webpack_public_path__ + \"static/media/ct-radio-deactivated.52a5186c.svg\";","module.exports = __webpack_public_path__ + \"static/media/vm-logo-primary.0faacd91.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-clear.2575dd7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-large-email-generic.032abe26.svg\";","import React, { Component } from 'react'\nimport logo from '../assets/vm-logo-primary.svg'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"logo\">\n                    <img src={logo} className=\"logo-img\" alt=\"logo\"/>\n\n                </div>\n                <div className=\"account-check\" >\n                    <span className=\"text\">\n                        Already have an account?\n\n                    </span>\n                </div>\n                <button className=\"log-in\">\n                    Log in\n\n                </button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport clear from '../assets/ic-clear.svg'\nimport emailGeneric from '../assets/ic-large-email-generic.svg'\n\nexport default class InvitedAlert extends Component{\n\n    render(){\n        return (\n            <div className=\"familiar-alert\">\n            <span onClick={this.props.onInvitedAlertClose}>\n                <div className=\"close\">\n                    <div className=\"close-text\">\n                        Close\n                    </div>\n                    <img src={clear} className=\"close-x\" alt=\"close x\"></img>\n                </div>\n            </span>\n                <div className=\"check-email-icon\">\n                    <img src={emailGeneric} className=\"email-icon\" alt=\"email icon\"></img>\n                </div>\n                <h2 className=\"familiar-header\">\n                    That looks familiar\n                </h2>\n                <div className=\"familiar-text\">\n                    That email looks like it's part of an exisiting company. Check your email for an invite to your company\n                </div>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react'\n\nexport default class PersonalAlert extends Component{\n\n    render(){\n        return(\n            <div className=\"personal-alert\">\n                <h2 className=\"personal-header\">\n                    That looks lke a personal email\n                </h2>\n                <div className=\"personal-text\">\n                    Press continue to create a new team, or go back to try finding your team instead.\n                </div>\n                <div className=\"personal-buttons\">\n                    <button type=\"submit\" value=\"Next\" className=\"personal-button-back\" onClick={this.props.onPersonalEmailBack}>\n                                <span className=\"personal-button-back-text\">\n                                    Back\n                                </span>\n                    </button>\n                    <button type=\"submit\" value=\"Next\" className=\"personal-button-continue\" onClick={this.props.onPersonalEmailConfirm}>\n                                <span className=\"personal-button-continue-text\">\n                                    Continue\n                                </span>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport InvitedAlert from './invited-alert'\nimport PersonalAlert from './personal-alert'\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            submitted: false,\n            alreadyInvited: false,\n            alreadySignedUp: false,\n            personalEmail: false,\n            continuePersonal: false,\n            canNotContinue: true\n        }\n\n    }\n\n    onPersonalEmailConfirm = () => {\n        this.setState({personalEmail: false})\n        this.setState({continuePersonal: true})\n        this.props.onEmailEntered(this.state)\n    }\n\n    onPersonalEmailBack = () => {\n        this.setState({personalEmail: false})\n    }\n\n    onEmailChange = (e) => {\n        this.setState({ email: e.target.value })\n        this.setState({alreadySignedUp: false})\n\n    }\n\n    onInvitedAlertClose = () => {\n        this.setState({alreadyInvited: false});\n    }\n\n\n    onButtonPress = (e) => {\n        e.preventDefault();\n\n        fetch('https://api-dev.vidmob.com/VidMob/api/noauth/v1/signupPrevalidation?email=' + this.state.email)\n            .then(response => {\n                if(response.status === 409){\n                    return Promise.reject()\n                } else if ( response.status === 200){\n                    return fetch('https://api-dev.vidmob.com/VidMob/api/noauth/v1/findMyTeam?email=' + this.state.email)\n                }\n            })\n            .then(findTeamResponse => findTeamResponse.json())\n            .then(responseJson => {\n                if(responseJson.result.isInWhitelist){\n                    const inviteEmails = { email: [] };\n                    inviteEmails.email.push(this.state.email);\n                    return fetch('https://api-dev.vidmob.com/VidMob/api/noauth/v1/findMyTeam', {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(inviteEmails) \n                    })\n                } else {\n                    this.props.onEmailEntered(this.state)\n                    return Promise.reject()\n                }\n                \n            })\n            .then(response => response.json())\n            .then(responseJson => {\n                if(responseJson.result.message === \"vidmob.result.inviteSent\"){\n                    this.setState({alreadyInvited: true})\n                }\n                console.log(responseJson)\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"form\">\n                <div className=\"form-content\">\n                    <div className=\"prompt\">\n                        <h2>Get Started on VidMob</h2>\n                        <p>Enter your work email.</p>\n                    </div>\n                    <div className=\"input\">\n                        {this.state.alreadySignedUp && this.renderEmailTakenAlert()}\n                        <form onSubmit={this.onSubmit}>\n                            <label>\n                                <input type=\"text\" placeholder=\"name@company.com\" className=\"email-input\" value={this.state.email} onChange={this.onEmailChange}/>\n                            </label>\n                            <button type=\"submit\" value=\"Next\" className=\"email-input-next\" onClick={this.onButtonPress} >\n                                <span className=\"next-button-text\">\n                                    Next\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                { this.state.alreadyInvited && this.renderInvited() }\n                { this.state.alreadyInvited || this.state.personalEmail ? <div className=\"alert-overlay\"></div> : null}\n                { this.state.personalEmail && this.renderPersonal() }\n\n            </div>\n        )\n    }\n\n    renderInvited(){\n        return <InvitedAlert onInvitedAlertClose = {this.onInvitedAlertClose }/>;\n    }\n\n    renderEmailTakenAlert(){\n        return(\n            <div className=\"email-taken-error\">\n                <div className=\"email-taken-error-text\">\n                    That email looks like it's already taken. Do you want to <a href=\"/\">login</a> or <a href=\"/\">reset your password</a>?\n                </div>\n            </div>\n        )\n    }\n\n    renderPersonal(){\n        return <PersonalAlert onPersonalEmailConfirm= { this.onPersonalEmailConfirm } onPersonalEmailBack={ this.onPersonalEmailBack }/>\n    }\n\n}","import React, { Component } from 'react'\n\nexport default class GetStarted extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            existingCompany: false,\n            firstName: '',\n            lastName: '',\n            displayName: '',\n            password: '',\n            companyName: '',\n        }\n\n    }\n\n    onFirstNameChange = (e) => {\n        this.setState({ firstName: e.target.value })\n    }\n\n    onLastNameChange = (e) => {\n        this.setState({ lastName: e.target.value })\n    }\n\n    onDisplayNameChange = (e) => {\n        this.setState({ displayName: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({password: e.target.value})\n    }\n\n    onCompanyNameChange = (e) => {\n        this.setState({companyName: e.target.value})\n        this.setState({existingCompany: false});\n    }\n\n    onSubmit= (e) => {\n        e.preventDefault();\n\n        if( \n            this.state.firstName === '' ||\n            this.state.lastName === '' ||\n            this.state.password === ''\n        ) { return }\n\n        fetch('https://api-dev.vidmob.com/VidMob/api/noauth/v1/signupPrevalidation?businessName=' + this.state.companyName)\n            .then(response => {\n                if(response.status === 409){\n                    this.setState({existingCompany: true})\n                } else {\n                    const newUser = {\n                        firstName: this.state.firstName,\n                        lastName: this.state.lastName,\n                        email: this.props.email,\n                        password: this.state.password\n                    }\n                    if(this.state.displayName !== '') { newUser.displayName = this.state.displayName }\n                    if(this.state.companyName !== '') { newUser.businessName = this.state.companyName }\n\n                    return fetch('https://api-dev.vidmob.com/VidMob/api/noauth/v1/signup', {\n                            method: 'POST',\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify(newUser) \n                        }   \n                    )\n                }\n            })\n            .then(response => response.json())\n            .then(responseJson => {\n                let accessToken = responseJson.result.access_token\n                let id = responseJson.result.id\n                this.props.onGetStartedSubmit(this.state, accessToken, id);\n            })\n    }\n\n\n    render(){\n        return(\n                <div className=\"get-started-form\">\n                    <div className=\"get-started-form-content\">\n                        <div className=\"get-started-prompt\">\n                            <h2>Get started on VidMob</h2>\n                            <p>Your email wasn't associated with an existing company. Fill out the information below to create a new one.</p>\n                        </div>\n                        <div className=\"get-started-input\">\n                            {this.state.existingCompany && this.renderCompanyExistsAlert()}\n                            <form onSubmit={this.onSubmit}>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.onFirstNameChange}></input>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.onLastNameChange}></input>\n                                <input type=\"text\" className=\"display-name\" placeholder=\"Display Name                                         (optional)\" value={this.state.displayName} onChange={this.onDisplayNameChange}></input>\n                                <input type=\"password\" className=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onPasswordChange}></input>\n                                <input type=\"text\" className=\"company-name\" placeholder=\"Company Name\" value={this.state.companyName} onChange={this.onCompanyNameChange}></input>\n                                <div className=\"signup-button-div\">\n                                    <button type=\"submit\" value=\"Sign Up\" className=\"get-started-signup\" disabled={ this.state.existingCompany ? true : false}>\n                                        <span className=\"get-started-signup-text\">\n                                            Sign Up\n                                        </span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n\n    renderCompanyExistsAlert(){\n        return(\n            <div className=\"company-exists-error\">\n                <div className=\"company-exists-error-text\">\n                    That company looks like it already exists. Try to <a href=\"/\">Find My Team</a> using your work email.\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class DomainInput extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            domains: []\n        }\n    }\n\n    inputKeyDown = (e) => {\n        const val = e.target.value;\n        if(e.key === 'Enter' && val){\n            if(this.state.domains.find(domain => domain.toLowerCase() === val.toLowerCase())){\n                return;\n            }\n            let newStateDomains = [...this.state.domains, val];\n\n            this.setState({domains: newStateDomains});\n            this.domainInput.value = null;\n            this.props.onDomainArrChange(newStateDomains);\n        } else if(e.key === 'Backspace' && !val) {\n            this.removeDomain(this.state.domains.length - 1);\n        }\n    }\n\n    removeDomain = (i) => {\n        const newDomains = [...this.state.domains];\n        newDomains.splice(i,1);\n        this.setState({domains: newDomains});\n        this.props.onDomainArrChange(newDomains);\n    }\n\n\n    render(){\n        return(\n            <div className=\"domain-input\">\n                <ul className=\"domain-list\">\n                    { this.state.domains.map((domain, i) => { \n                                let conditionalItemClass;\n                                if(i === this.state.domains.length - 1 ){\n                                    conditionalItemClass = 'last-line-item';\n                                } else {\n                                    conditionalItemClass = '';\n                                }\n                                return(\n                                    <li className={\"domain-list-item \" + conditionalItemClass} key={domain}>\n                                        <div className=\"domain-list-item-content\">\n                                            <div className=\"list-item-text\">{domain}</div>\n                                            <div className=\"remove-button\" onClick={() => { this.removeDomain(i); }}>\n\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path className=\"svg-remove-button\" d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5 15.538l-3.592-3.548 3.546-3.587-1.416-1.403-3.545 3.589-3.588-3.543-1.405 1.405 3.593 3.552-3.547 3.592 1.405 1.405 3.555-3.596 3.591 3.55 1.403-1.416z\"/></svg>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ) \n                            } \n                        )  \n                    }\n                    <input \n                        type=\"text\" \n                        className={this.state.domains.length === 0 ? 'domain-text-input-always-show' : 'domain-text-input'}\n                        placeholder={this.state.domains.length === 0 ? 'Enter one or more domain...' : ''}\n                        id={this.state.domains.length > 1 && this.state.domains.length%2 === 0 ? 'input-alone-bottom-row' : 'test'}\n                        onKeyDown={this.inputKeyDown} \n                        ref={ c => this.domainInput = c} \n                        disabled={this.props.emailIsSelected ? false : true}\n                    />\n                </ul>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport radioSelected from '../assets/ct-radio-selected.svg';\nimport radioDeactivated from '../assets/ct-radio-deactivated.svg';\nimport DomainInput from './domain-input';\n\nexport default class CompanySignup extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            inviteOnly: false,\n            anyFromDomains: true,\n            domains: []\n        }\n\n    }\n\n    onSelectDomains = (e) => {\n        this.setState({anyFromDomains: true, inviteOnly: false})\n    }\n\n    onSelectInviteOnly = (e) => {\n        this.setState({anyFromDomains: false, inviteOnly: true})\n\n    }\n\n    onDomainArrChange = (domains) => {\n        this.setState({domains: domains});\n    }\n\n    onSubmit = (e) => {\n        this.props.onCompanySignupSubmit(this.state);\n    }\n\n    render(){\n        return(\n            <div className=\"company-signup-form\">\n                <div className=\"company-signup-form-content\">\n                    <div className=\"company-signup-prompt\">\n                        <h2>Company sign up mode</h2>\n                        <p>Anyone with a specified email domain can join your team. Otherwise, and owner or co-owner will have to invite all team members.</p>\n                    </div>\n                    <div className=\"company-signup-input\">\n                        <div className=\"any-email\">\n                            <img \n                                src={this.state.anyFromDomains ? radioSelected : radioDeactivated} \n                                className={this.state.fromAnyDomains ? \"radio-selected-email\" : \"radio-deactivated-email\"} \n                                onClick={this.onSelectDomains} \n                                alt={this.state.anyFromDomains ? \"radio selected\" : \"radio deactivated\"}\n                            />\n                            <div className={this.state.anyFromDomains ? \"any-domain-text-selected\":\"any-domain-text\"}>\n                                Any email from my domains\n                            </div>\n                        </div>\n                            <DomainInput emailIsSelected={this.state.anyFromDomains} onDomainArrChange={this.onDomainArrChange}/>\n                        <div className=\"invite-only-input\">\n                            <img \n                                src={this.state.inviteOnly ? radioSelected : radioDeactivated} \n                                className={this.state.inviteOnly ? \"radio-selected-invite\" : \"radio-deactivated-invite\"} \n                                onClick={this.onSelectInviteOnly}\n                                alt={this.state.inviteOnly ? \"radio selected\" : \"radio deactivated\"}\n                            />\n                            <div className={this.state.inviteOnly ? \"invite-only-text-selected\" : \"invite-only-text\"}>\n                                Invite only\n                            </div>\n                        </div>\n                        <div className=\"company-signup-done-div\">\n                            <button type=\"submit\" value=\"Done\" className=\"company-signup-done\" onClick={this.onSubmit} disabled={this.state.anyFromDomains && this.state.domains.length === 0 ? true : false}>\n                                <span className=\"company-signup-done-text\">\n                                    Done\n                                </span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class JoinTeam extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            displayName: '',\n            password: ''\n        }\n\n    }\n\n    onFirstNameChange = (e) => {\n        this.setState({ firstName: e.target.value })\n    }\n\n    onLastNameChange = (e) => {\n        this.setState({ lastName: e.target.value })\n    }\n\n    onDisplayNameChange= (e) => {\n        this.setState({ displayName: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({password: e.target.value})\n    }\n\n    render(){\n        return(\n\n                <div className=\"join-team-form\">\n                    <div className=\"join-team-form-content\">\n                        <div className=\"join-team-prompt\">\n                            <h2>Join the VidMob team</h2>\n                            <p>Your email is associated with an existing company. Fill out the information below to finish the setup</p>\n                        </div>\n                        <div className=\"join-team-input\">\n                            <form>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.onFirstNameChange}></input>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.onLastNameChange}></input>\n                                <input type=\"text\" className=\"display-name\" placeholder=\"Display Name                                         (optional)\" value={this.state.displayName} onChange={this.onDisplayNameChange}></input>\n                                <input type=\"password\" className=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onPasswordChange}></input>\n                                <div className=\"signup-button-div\">\n                                    <button type=\"submit\" value=\"Sign Up\" className=\"join-team-signup\">\n                                        <span className=\"join-team-signup-text\">\n                                            Sign Up\n                                        </span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Header from './header';\nimport EmailForm from './email-form';\nimport GetStarted from './get-started';\nimport CompanySignup from './company-sign-up';\nimport JoinTeam from './join-team';\nimport { Redirect } from 'react-router';\nimport { Route, Switch, Link, BrowserRouter as Router } from 'react-router-dom';\nimport { access } from 'fs';\n\nexport default class Root extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            emailEntered: false,\n            existingCompany: false,\n            companySignup: false,\n            nonExistingSignup: false,\n            email: '',\n            firstName: '',\n            lastName: '',\n            displayName: '',\n            password: '',\n            companyName: '',\n            inviteOnly: false,\n            anyFromDomains: false,\n            domains: [],\n            accessToken: '',\n            id: '',\n        }\n\n    }\n\n    isExistingCompany = () => {\n        this.setState({existingCompany: true});\n    }\n\n    onEmailEntered = (childState) => {\n        this.setState({emailEntered: true, email: childState.email});\n        if(!childState.alreadyInvited && !childState.alreadySignedup){\n            this.setState({nonExistingSignup: true});\n        } \n    }\n\n    onGetStartedSubmit = (childState, accessToken, id) => {\n        this.setState(\n            {\n                firstName: childState.firstName,\n                lastName: childState.lastName,\n                displayName: childState.displayName,\n                password: childState.password,\n                companyName: childState.companyName,\n                accessToken: accessToken,\n                id: id,\n                companySignup: true,\n                nonExistingSignup: false\n            }\n        )\n    }\n\n    onCompanySignupSubmit = (childState) => {\n        this.setState({inviteOnly: childState.inviteOnly, anyFromDomains: childState.anyFromDomains, domains: childState.domains })\n        let companySignup = {};\n        if(childState.anyFromDomains === true){\n            companySignup.findMyTeamEnabled = true;\n            companySignup.domainWhitelist = childState.domains;\n        } else {\n            companySignup.findMyTeamEnabled = false;\n            companySignup.domainWhitelist = [];\n        }\n\n        fetch('https://api-dev.vidmob.com/VidMob/api/v1/user/partner', {\n            method: 'POST',\n            headers: {\n                'Authorization' : 'Bearer ' + this.state.accessToken,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(companySignup)\n        })\n        .then(response => response.json())\n        .then(responseJson => console.log(responseJson))\n    }\n\n    render() {\n        return (\n                <div className=\"background\">\n                    <Header />\n                        <Route exact path=\"/\" render={props => <EmailForm {...props} onEmailEntered={this.onEmailEntered}/> }/>\n                        <Route path=\"/getStarted\" render={props => <GetStarted {...props} onGetStartedSubmit={this.onGetStartedSubmit} email={this.state.email}/> }/>\n                        <Route path=\"/companySignup\" render={props => <CompanySignup {...props}  onCompanySignupSubmit={this.onCompanySignupSubmit} accessToken={this.state.accessToken} />}/>\n                        <Route path=\"/jointeam\" component={JoinTeam} />\n                        { this.state.nonExistingSignup && this.renderGetStarted() }\n                        { (this.props.location.pathname === '/jointeam' || this.props.location.pathname === '/getStarted') && this.renderTerms() }\n                        { this.state.companySignup && this.renderCompanySignup() }\n                    <button className=\"chat-button\"></button>\n                </div>\n        )\n    }\n\n    renderGetStarted(){\n        if(this.props.location.pathname !== '/getStarted'){\n            return(<Redirect to=\"/getStarted\"/>)\n        } else {\n            return null\n        }\n    }\n\n    renderCompanySignup(){\n        if(this.props.location.pathname !== '/companySignup'){\n            return(<Redirect to=\"/companySignup\"/>)\n        } else {\n            return null\n        }\n    }\n\n    renderTerms(){\n        return (<div className={this.props.location.pathname === '/jointeam' ? 'terms-link' : \"terms-link-non-existing\"}>By selecting Sign Up, you agree to our <a href=\"/\">Terms & Conditions</a></div>)\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './containers/index';\nimport './index.scss';\nimport { Route, HashRouter as Router } from 'react-router-dom';\n\nconst routing = (\n    <Router>\n        <div>\n            <Route path=\"/\" component={Index}/>\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}